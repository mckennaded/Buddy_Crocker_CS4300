name: Run Tests with Coverage

on:
  push:
    branches: ['**']  # Run on all branches
  pull_request:
    branches: ['**']

jobs:

# Run all tests on commits and PRs
  test:
    runs-on: ubuntu-latest
    
    env:
      SECRET_KEY: 'test-secret-key-for-github-actions'
      ENVIRONMENT: 'development'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for git diff to work
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'  # Match your Python version
      
      - name: Install dependencies
        working-directory: ./Buddy_Crocker
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run migrations
        working-directory: ./Buddy_Crocker
        run: |
          python manage.py migrate
      
      - name: Run tests with coverage
        working-directory: ./Buddy_Crocker
        run: |
          coverage run --source='.' manage.py test
          echo "=========================================="
          echo "TEST COVERAGE REPORT"
          echo "=========================================="
          coverage report -m
          coverage xml
          echo "=========================================="

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./Buddy_Crocker/coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

# AI Code Review (only on PRs)
  ai_review:
    name: AI Code Review
    needs: test  # Runs after tests complete (even if they fail)
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write
      issues: read
      contents: read
      actions: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install OpenAI dependency
        run: pip install openai PyGithub 

      - name: Get PR diff
        run: |
          git fetch origin ${{ github.base_ref }}
          git diff origin/${{ github.base_ref }}...HEAD -- '*.py' > pr_diff.txt
          echo "Diff file created:"
          wc -l pr_diff.txt || true

      - name: Run AI review
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_PR_ID: ${{ github.event.pull_request.number }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: python .github/scripts/ai_review.py